@page "/orderdetails"

@inject IProductCategoryService ProductCategoryService
@inject IProductService ProductService
@inject IClientService clientService
@inject IOrderService orderService
@attribute [Authorize]
@inject NavigationManager nav

<p><strong>@Message</strong></p>

@if (productCategories != null && Order != null)
{
    <div class="card" style="width: 55rem;">
        <h5 class="card-title">Order Details</h5>
        <div class="card-body m-1 bg-opacity-10 ">
            <EditForm Model="@Order" OnValidSubmit="SaveOrder">
                <div class="container">
                    <div class="row">
                        <div class="col-md-4 mb-3">

                        </div>
                        <div class="col-md-4 mb-3">
                            <input type="submit" class="btn btn-success" value="Save"/>
                            <input type="button" class="btn btn-secondary" value="Cancel" @onclick="Cancel"/>
                        </div>
                        <div class="col-md-4 mb-3">
                        </div>
                    </div>
                    <div class="row">
                       
                        <div class="col-md-6 mb-3">
                           <label for="">Number</label>
                           <InputNumber class="form-control"@bind-Value="@Order.OrderNumber"/>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="">Order Date</label>
                            <InputDate class="form-control" @bind-Value="@Order.OrderDate" />
                        </div>
                    </div>
                    <div class="row">

                        <div class="col-md-12 mb-3">
                            <label for="">Client</label>
                            <InputSelect class="form-select" @bind-Value="@Order.ClientId">
                                @foreach(var item in Clients)
                                {
                                    <option value="@item.Id">@(item.FirstName+", "+item.FirstName)</option> 
                                }


                            </InputSelect>
                        </div>

                        <div class="row">

                            <div class="col-md-6 mb-3">
                                <label for="">Delivery Date</label>
                                <InputDate class="form-control" @bind-Value="@Order.DeliveryDate" />
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="">Total</label>
                                <InputNumber class="form-control" @bind-Value="@Order.Total" />
                            </div>
                        </div>
                       
                    </div>
                </div>

















                <div class="container" style="width: 18rem;align-items:start">
                    <h5 class="card-title">Categories</h5>
                    <InputSelect class="form-select col-sm-5"
                                 Value="@Order.ProductCategoryId"
                                 ValueChanged="@((int productCategoryId) => ProductCategoryHasChanged( productCategoryId))"
                                 ValueExpression="@(() => Order.ProductCategoryId)">
                        @foreach (var item in productCategories)
                        {
                            <option value="@item.Id">@item.Name</option>
                        }

                    </InputSelect>

                    <br />

                    <h5 class="card-title">Products</h5>
                    <InputSelect class="form-select col-sm-5" @bind-Value="@ProductId">
                        @foreach (var item in Products)
                        {
                            <option value="@item.Id">@item.Name</option>
                        }

                    </InputSelect>

                </div>


            </EditForm>

            
        </div>



          


    </div>
}
else
{
    <button class="btn btn-warning" type="button" disabled>
        <span class="spinner-border spinner-border-sm" aria-hidden="true"></span>
        <span role="status">Loading...</span>
    </button>
}


@code {
    public Order Order;
    public IEnumerable<ProductCategory> productCategories;
    public IEnumerable<Product> Products { get; set; }
    public IEnumerable<Client> Clients { get; set; }
    public string ProductId { get; set; }
    public string Message { get; set; }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            Order = new Order() {
                ProductCategoryId = 1,
                OrderDate = DateTime.Today,
                DeliveryDate = DateTime.Today.AddDays(7)
                };
            productCategories = await ProductCategoryService.GetProductCategories();
            await LoadProducts(Order.ProductCategoryId);

            Clients = await clientService.GetClient();
        }
        catch (Exception e)
        {

            Message = $"There was an error...{e.Message}";
        }
    }

    protected async Task ProductCategoryHasChanged(int productCategoryId)
    {
        Order.ProductCategoryId = productCategoryId;

        if (Order.ProductCategoryId > 0)
            await LoadProducts(Order.ProductCategoryId);


    }

    private async Task LoadProducts(int productCategoryId)
    {
        Products = await ProductService.GetByCategory(productCategoryId);
    }


    protected async Task SaveOrder()
    {
        await orderService.SaveOrder(Order);
        NavigateToHome();
    }

    private void NavigateToHome()
    {
        nav.NavigateTo("/");

    }

    protected void Cancel()
    {
        NavigateToHome();
    }



}
